#pragma once


#ifdef __cplusplus
#define EXTERN extern "C"
#else
#define EXTERN extern
#endif

#ifndef _EXP_STR_MAN_H
#define _EXP_STR_MAN_H

#include <Windows.h>



//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\
//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\

// https://docs.microsoft.com/en-us/windows/win32/api/subauth/ns-subauth-unicode_string

//#define UNICODESTRING
#if !defined (UNICODESTRING)
typedef struct _UNICODE_STRING {
	USHORT Length;
	USHORT MaximumLength;
	PWSTR  Buffer;
} UNICODE_STRING, * PUNICODE_STRING;

#endif
//------------------------------------------------------------------------------------------------------------------------------------

EXTERN PCHAR  CaplockStringA(PCHAR Ptr);
EXTERN PWCHAR CaplockStringW(PWCHAR Ptr);

//------------------------------------------------------------------------------------------------------------------------------------

EXTERN PCHAR  SecureStringCopyA(PCHAR String1, LPCSTR String2, SIZE_T Size);
EXTERN PWCHAR SecureStringCopyW(PWCHAR String1, LPCWSTR String2, SIZE_T Size);

//------------------------------------------------------------------------------------------------------------------------------------

EXTERN INT StringCompareA(LPCSTR String1, LPCSTR String2);
EXTERN INT StringCompareW(LPCWSTR String1, LPCWSTR String2);

//------------------------------------------------------------------------------------------------------------------------------------

EXTERN PCHAR  StringConcatA(PCHAR String, PCHAR String2);
EXTERN PWCHAR StringConcatW(PWCHAR String, PWCHAR String2);

//------------------------------------------------------------------------------------------------------------------------------------

EXTERN PCHAR  StringCopyA(PCHAR String1, PCHAR String2);
EXTERN PWCHAR StringCopyW(PWCHAR String1, PWCHAR String2);

//------------------------------------------------------------------------------------------------------------------------------------

EXTERN INT StringCompareStringRegionA(PCHAR String1, PCHAR String2, SIZE_T Count);
EXTERN INT StringCompareStringRegionW(PWCHAR String1, PWCHAR String2, SIZE_T Count);

//------------------------------------------------------------------------------------------------------------------------------------

EXTERN PCHAR  StringFindSubstringA(PCHAR String1, PCHAR String2);
EXTERN PWCHAR StringFindSubstringW(PWCHAR String1, PWCHAR String2);

//------------------------------------------------------------------------------------------------------------------------------------

EXTERN SIZE_T StringLengthA(LPCSTR String);
EXTERN SIZE_T StringLengthW(LPCWSTR String);

//------------------------------------------------------------------------------------------------------------------------------------

EXTERN PCHAR  StringLocateCharA(PCHAR String, INT Character);
EXTERN PWCHAR StringLocateCharW(PWCHAR String, INT Character);

//------------------------------------------------------------------------------------------------------------------------------------

EXTERN PCHAR  StringRemoveSubstringA(PCHAR String, CONST PCHAR Substring);
EXTERN PWCHAR StringRemoveSubstringW(PWCHAR String, CONST PWCHAR Substring);

//------------------------------------------------------------------------------------------------------------------------------------

EXTERN PCHAR  StringTerminateStringAtCharA(PCHAR String, INT Character);
EXTERN PWCHAR StringTerminateStringAtCharW(PWCHAR String, INT Character);

//------------------------------------------------------------------------------------------------------------------------------------

EXTERN PCHAR  StringTokenA(PCHAR String, CONST PCHAR Delim);
EXTERN PWCHAR StringTokenW(PWCHAR String, CONST PWCHAR Delim);

//------------------------------------------------------------------------------------------------------------------------------------

EXTERN VOID RtlInitEmptyUnicodeString(PUNICODE_STRING UnicodeString, PWCHAR Buffer, USHORT BufferSize);
EXTERN VOID RtlInitUnicodeString(PUNICODE_STRING DestinationString, PCWSTR SourceString);

//------------------------------------------------------------------------------------------------------------------------------------

EXTERN VOID CharArrayToByteArrayA(PCHAR Char, PBYTE Byte, DWORD Length);
EXTERN VOID CharArrayToByteArrayW(PWCHAR Char, PBYTE Byte, DWORD Length);

//------------------------------------------------------------------------------------------------------------------------------------

EXTERN SIZE_T CharStringToWCharString(PWCHAR Destination, PCHAR Source, SIZE_T MaximumAllowed);
EXTERN SIZE_T WCharStringToCharString(PCHAR Destination, PWCHAR Source, SIZE_T MaximumAllowed);

//------------------------------------------------------------------------------------------------------------------------------------

EXTERN DWORD DecimalToAsciiA(PCHAR String, LPDWORD dwArray, DWORD dwLength);
EXTERN DWORD DecimalToAsciiW(PWCHAR String, LPDWORD dwArray, DWORD dwLength);

//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\
//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\

EXTERN VOID InitializeRandomPseudoIntStruct(ULONG Seed, INT rNb10d, INT rNb5d);
EXTERN INT CreatePseudoRandomInteger(VOID);

//------------------------------------------------------------------------------------------------------------------------------------

EXTERN PWCHAR CreatePseudoRandomStringW(SIZE_T dwLength);
EXTERN PCHAR  CreatePseudoRandomStringA(SIZE_T dwLength);

//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\
//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\

EXTERN VOID  InitializeDjb2HashStringStruct(ULONG Hash, INT Seed);
EXTERN DWORD HashStringDjb2A(PCHAR String);
EXTERN DWORD HashStringDjb2W(PWCHAR String);

//------------------------------------------------------------------------------------------------------------------------------------

EXTERN VOID  InitializeVariant1aHashStringStruct(ULONG Hash1, ULONG Hash2);
EXTERN ULONG HashStringFowlerNollVoVariant1aA(PCHAR String);
EXTERN ULONG HashStringFowlerNollVoVariant1aW(PWCHAR String);

//------------------------------------------------------------------------------------------------------------------------------------

EXTERN VOID	InitializeJenkinsHashStringStruct(INT rNb1, INT rNb2, INT rNb3, INT rNb4, INT rNb5);
EXTERN UINT32	HashStringJenkinsOneAtATime32BitA(PCHAR String);
EXTERN UINT32	HashStringJenkinsOneAtATime32BitW(PWCHAR String);

//------------------------------------------------------------------------------------------------------------------------------------

EXTERN DWORD HashStringLoseLoseA(PCHAR String);
EXTERN DWORD HashStringLoseLoseW(PWCHAR String);

//------------------------------------------------------------------------------------------------------------------------------------

EXTERN INT HashStringRotr32A(PCHAR String, INT Seed);
EXTERN INT HashStringRotr32W(PWCHAR String, INT Seed);

//------------------------------------------------------------------------------------------------------------------------------------

EXTERN VOID  InitializeSdbmHashStringStruct(INT rNb1, INT rNb2);
EXTERN DWORD HashStringSdbmA(PCHAR String);
EXTERN DWORD HashStringSdbmW(PWCHAR String);

//------------------------------------------------------------------------------------------------------------------------------------

EXTERN VOID InitializeFastHashStringStruct(INT rNb1, INT rNb2, INT rNb3, INT rNb4);
EXTERN UINT32 HashStringSuperFastHashA(PCHAR String);
EXTERN UINT32 HashStringSuperFastHashW(PWCHAR String);

//------------------------------------------------------------------------------------------------------------------------------------

EXTERN VOID InitializeGenericHashStringStruct(INT rNb1, INT rNb2);
EXTERN INT HashStringUnknownGenericHash1A(PCHAR String);
EXTERN INT HashStringUnknownGenericHash1W(PWCHAR String);


//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\
//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\



#endif // !_EXP_STR_MAN_H
